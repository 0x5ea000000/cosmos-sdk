syntax = "proto3";
package cosmos.authn.v1;

import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "cosmos/authn/v1/account.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/authn";

service Query {
    // Account returns account details based on address.
    rpc Account(QueryAccountRequest) returns (QueryAccountResponse) {
        option (google.api.http).get = "/cosmos/auth/v1beta1/accounts/{address}";
    }

    // Accounts returns all the existing accounts
    rpc Accounts(QueryAccountsRequest) returns (QueryAccountsResponse) {
        option (google.api.http).get = "/cosmos/auth/v1beta1/accounts";
    }
}

message QueryAccountRequest {
    string address = 1;
}

message QueryAccountResponse {
    Account account = 1;
}
message QueryAccountsRequest {
    // pagination defines an optional pagination for the request.
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryAccountsResponse is the response type for the Query/Accounts RPC method.
message QueryAccountsResponse {
    // accounts are the existing accounts
    repeated Account accounts = 1;

    // pagination defines the pagination in the response.
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}