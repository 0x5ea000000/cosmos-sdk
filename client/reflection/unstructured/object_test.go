package unstructured

import (
	"testing"

	"github.com/stretchr/testify/suite"
	"google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/reflect/protoregistry"
	"google.golang.org/protobuf/runtime/protoimpl"
)

// this is a protobuf file descriptor which contains the required types to run unstructured tests
/* unstructured_test.proto
syntax="proto3";

package unstructured.test;

message Flat {
 string hi = 1;
}

message Nested {
  string test = 1;
  Flat nested = 2;
}

message WithMap {
 string test = 1;
 map<int64, string> a_map = 2;
}

message WithList {
 string test = 1;
 repeated string rep = 2;
}
*/
var fileDescriptor = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x75, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a, 0x04, 0x46, 0x6c, 0x61,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68,
	0x69, 0x22, 0x4d, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x75, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x74, 0x52, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x22, 0x91, 0x01, 0x0a, 0x07, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x05, 0x61, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x75, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x70, 0x2e, 0x41, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x4d, 0x61, 0x70, 0x1a, 0x37, 0x0a, 0x09, 0x41,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x72, 0x65, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

type MapSuite struct {
	suite.Suite
	fd protoreflect.FileDescriptor

	mapMD protoreflect.MessageDescriptor
}

func (m *MapSuite) SetupTest() {
	m.Require().NotPanics(func() {
		b := protoimpl.DescBuilder{
			RawDescriptor: fileDescriptor,
			TypeResolver:  new(protoregistry.Types),
			FileRegistry:  new(protoregistry.Files),
		}

		m.fd = b.Build().File
	})

	m.mapMD = m.fd.Messages().ByName("WithMap")
	m.Require().NotNil(m.mapMD)
}

func (m *MapSuite) TestMessageWithMap() {
	msg := Map{
		"a_map": map[int64]string{
			1: "hi",
		},
	}

	pb, err := msg.Marshal(m.mapMD)
	m.Require().NoError(err)

	m.T().Logf("%s", pb)
}

func TestMap(t *testing.T) {
	suite.Run(t, new(MapSuite))
}
